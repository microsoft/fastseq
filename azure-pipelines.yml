# Copyright (c) Microsoft Corporation.
# Licensed under the MIT License.

#Azure pipeline for continuous integration

trigger:
  paths:
    exclude:
      - docs
jobs:
  - job: Fastseq_unittests
    timeoutInMinutes: 360
    pool:
      name: default
      demands:
        - agent.name -equals gpu3
    container:
      image: mcr.microsoft.com/mirror/nvcr/nvidia/cuda:10.2-cudnn7-devel-ubuntu18.04
      options: --gpus device=3
    steps:
    - script: |
        which conda
        export CONDA_PATH= /datadrive/fastseq/dev/miniconda3
        rm -rf $CONDA_PATH
        wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-py39_4.9.2-Linux-x86_64.sh -O ${PWD}/miniconda.sh --no-check-certificate && /bin/bash ${PWD}/miniconda.sh -b -p ${CONDA_PATH} && rm ${PWD}/miniconda.sh && $(eval echo "${CONDA_PATH}/bin/conda clean -ya")
        export PATH=${CONDA_PATH}/bin:${PATH}
        conda info
        conda install pip
        which conda

        #install fastseq
        pip install --upgrade pip
        pip install sentencepiece==0.1.96
        pip install torch==1.10.0

        echo "******* Installing fairseq *******"
        pip install fairseq==0.10.2
        pip show fairseq

        echo "******* Installing transformers *******"
        pip install transformers==4.12.0
        pip show transformers

        echo "******* Installing fastseq *******"
        pip install --editable .
        pip show fastseq

        echo "******* Adding local bin to path *******"
        export PATH="$HOME/bin:$HOME/.local/bin:$PATH"

        #cd benchmarks/
        #bash run_all_benchmarks.sh

        #show environment
        which python
        python --version
        nvcc --version
        python -c "import torch; print('torch:', torch.__version__, torch)"
        python -c "import torch; print('CUDA available:', torch.cuda.is_available())"

        echo "******* Running transformers unittests *******"
        bash tests/run_transformers_tests.sh

        echo "******* Running fairseq unittests *******"
        pip install apex==0.9.10.dev0
        bash tests/run_fairseq_tests.sh

        echo "******* Running fastseq unittests *******"
        pip install pytorch-transformers==1.0.0
        bash tests/run_fastseq_tests.sh

      displayName: 'run fastseq unit tests'
    - task: PublishTestResults@2
      condition: succeededOrFailed()
      inputs:
        testRunTitle: 'Publish test results for Python $(python.version)'
        testResultsFiles: 'tests/log_xml/*.xml'
        failTaskOnFailedTests: true
